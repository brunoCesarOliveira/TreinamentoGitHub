 #Aula 14 Criando um repositório 
    git.init                           => criando um repositório  

 #Aula 17 Eviando o repositório para o GitHub
    git status                         => Verificando as alterações
    git add .                          => Adicionando todos os arquivo para ser comitado
    git commit -m "mensagem"           => Salvando o arquivo no repositório local
    git branch -M master               => Criando uma Branch (master)    
    git remote add origin git@github.com:bcimportar/curso_git_1.git     => Sincronizando projeto local com remoto (github.com)  
    git remote -v                      => Verificando as origens
    git remote -rm origin              => Removendo as origin
    git remote add  origin git@github.com:bcimportar/curso_git_1.git     => Adicionando uma nova origin (SSH) (Site do Git)
    git push -u origin master          => Enviando arquivos para remoto (github.com)

 #Aula 18 Verificando as Mudanças 
    git status                         => Verificando as alterações
    Untracked Files                    => Arquivo ainda não mapeado pelo GitHub (U)
    new File                           => Novo arquivo adicionado  (A)
    modified File                      => Arquivo modificado (M)
    git add contato.html               => Adicionando um arquivo específico 
    git add .                          => Adicionando Todos os arquivo para serem comitados
    
 #Aula 19 Salvando as alterações 
   git commit a.txt -m "mensagem"      => Salvando  o arquivo específico  repositório local
   git commit -a -m "mensagem "        => Salvando todos os arquivo 

 #Aula 21 Enviando códigos para o repositório remoto
    git push                           => Eviando os arquivo para repositório remoto

 #Aula 22 Recebendo alterações
   git pull                             => Recebendo atualizações do repoistorio remoto  

 #Aula 23 Clonando repositório
    git clone  git@github.com:bcimportar/curso_git_1.git  => Clonando o repositório remoto

 #Aula 24 Removendo arquivos
    git rm c.txt                    => Removendo arquivo

 #Aula 25 Verificando as alterações por Log
    git log     => Verificando as os commits
 
 #Aula 26 Mover ou Renomear arquivo
   git mv script.js css/script.js                       => Movendo arquivos
   git mv css/banne.css css/banner_inicial.css          => Renomeando arquvios

 #Aula 27 Defazendo as alterações
   git checkout css/banner_inicial.cs                    => Reseta as alterações feitas no arquivo (original)

 #Aula 28 Igonorando arquvos no projeto  
   .gitignore
  
 #Aula 33 Criando a visualizando branches
   git branch                        => Lista as  branches 
   git branch primeiro_branch        => criando uma nova branch (baseada na master)
   
 #Aula 34 Deletando branches
   git branch -d segundo_branch                => Deleta a branch
   git branch --delete 123_arrrumar_bug_home   => Deleta a branch

 #Aula 35 Mudando de brach
    git checkout novabranch        => Muda de Branch (sempre cuidar para adicionar os arquivo antes de mudar de brach)
    git checkout --b novabranch    => Muda de Branch e já a novabranch Alternando a branch algum_nome   atualização
        
 #Aula 36 Unindo Branch
    git merge algum_nome               => Unindo master com algum_nome
    git add .                          => Para as novas atualizações
    git push                           => Para atualizações o repositório remoto
      
 #Aula 37 Utilizando a Stash
   git stash           => Guarda as alterações  em outro lugar 
  
 #Aula 40 Utilizando Tags
   git tag -a v1.0 -m "Primeira versão"    => Adiciona  a tag
   git tag                                 => Lista  tags

 #Aula 40 Verificando e alterando a tags 
     git show v1.0          => Mostra os detalhes da tag

 #Aula 41 Verificando e alterando a tags 
     git show v1.0          => Mostra os detalhes da tag
     git checkout  v5.0     => alterando a Tag

 #Aula 42 Enviando tag par ao repositório remoto 
   git push origin v4.0       => Enviando Tags para o repositorio

 #Aula 45 Encontrando Branch
   git push --set-upstream origin Funcionalidade_A  =>Enviando brach para o repositorio
   git fetch -a                                     => Pega todas as branch do repoistorio

 #Aula 46 Recebendo Alterações 
   git pull                   => Pega todas as atualização	do repositorio
   (Deixando a produção sempre atualizada )

#Aula 47 Eviando Alterações
   git push              => Enviando as alterações para repositório